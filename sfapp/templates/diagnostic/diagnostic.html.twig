{% extends 'base.html.twig' %}

{% block title %}Outil de diagnostic{% endblock %}

{% block head %}
{% endblock %}

{% block body %}

<!-- Contenu principal centr√© -->
<div class="d-flex justify-content-center align-items-center vh-60 flex-column">
    <h1>Diagnostic</h1>
</div>


{% if dataTemp.error is defined or dataHum.error is defined or dataCo2.error is defined %}
    <p>Erreur : {{ dataTemp.error ?? dataHum.error ?? dataCo2.error }}</p>
{% else %}


{% endif %}


<div class="container mt-4">
    <div class="card shadow-sm p-4">
        <h1 class="h3 mb-4 text-center background-container"> {{ as.Name }}</h1>

        <div class="row">
            <div class="col-md-4 mb-3">
                <div class="accordion" id="accordionPanelsStayOpenExampleOne">
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed border border-black" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="false" aria-controls="panelsStayOpen-collapseOne">
                                GRAPHIQUE CO2
                            </button>
                        </h2>
                        <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <div>
                                    <canvas id="co2Chart" style="width: 100%; height: 350px;"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4 mb-3">
                <div class="accordion" id="accordionPanelsStayOpenExampleTwo">
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed border border-black" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseTwo" aria-expanded="false" aria-controls="panelsStayOpen-collapseTwo">
                                GRAPHIQUE HUMIDITE
                            </button>
                        </h2>
                        <div id="panelsStayOpen-collapseTwo" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <canvas id="humChart" style="width: 100%; height: 350px;"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4 mb-3">
                <div class="accordion" id="accordionPanelsStayOpenExampleThree">
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed border border-black" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseThree" aria-expanded="false" aria-controls="panelsStayOpen-collapseThree">
                                GRAPHIQUE TEMPERATURE
                            </button>
                        </h2>
                        <div id="panelsStayOpen-collapseThree" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <canvas id="tempChart" style="width: 100%; height: 350px;"></canvas>                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4 mb-3">
                <div class="accordion" id="accordionPanelsStayOpenExampleFour">
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed border border-black" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseFour" aria-expanded="false" aria-controls="panelsStayOpen-collapseFour">
                                Rappel des 5 derni√®res alertes
                            </button>
                        </h2>
                        <div id="panelsStayOpen-collapseFour" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                refsdgdgsreqfgyhtdresxcgtdrgxcgtrgfdxrtgf
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="accordion" id="accordionPanelsStayOpenExampleFive">
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed border border-black" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseFive" aria-expanded="false" aria-controls="panelsStayOpen-collapseFive">
                                Analyse
                            </button>
                        </h2>
                        <div id="panelsStayOpen-collapseFive" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <p id="analyse-text-co2"> CO2 :La moyenne de co2 est dans la normale (Pas de probl√®me) </p>
                                <p id="analyse-text-hum"> Humidit√© : Il y a tr√®s peu de risques de moisissure</p>
                                <p id="analyse-text-temp"> Temp√©rature : La temp√©rature moyenne est confortable</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <script>
            // Donn√©es pour les graphiques
            const labels = [];
            {% for item in dataTemp %}
            labels.push('{{ item.dateCapture }}');
            {% endfor %}

            const tempData = [];
            {% for item in dataTemp %}
            tempData.push({{ item.valeur }});
            {% endfor %}

            const humData = [];
            {% for item in dataHum %}
            humData.push({{ item.valeur }});
            {% endfor %}

            const co2Data = [];
            {% for item in dataCo2 %}
            co2Data.push({{ item.valeur }});
            {% endfor %}

            // Donn√©es pour les graphiques
            let redThresholdCo2 = 0;
            let yellowThresholdCo2 = 0;
            let greenThresholdCo2 = 0;

            for (let i = 0; i < co2Data.length; i++) {
                 if(co2Data[i] >= 400 && co2Data[i] < 1000)
                 {
                     greenThresholdCo2++;
                 }
                 else if(co2Data[i] >= 1000 && co2Data[i] < 1400)
                 {
                     yellowThresholdCo2++;
                 }
                 else if(co2Data[i] >= 1400)
                 {
                     redThresholdCo2++;
                 }
                 else{
                     redThresholdCo2++;
                 }
            }


            // Donn√©es pour les graphiques
            let darkBlueThresholdTemp = 0;
            let lightBlueThresholdTemp = 0;
            let redThresholdTemp = 0;
            let yellowThresholdTemp = 0;
            let orangeThresholdTemp = 0;
            let greenThresholdTemp = 0;

            for (let i = 0; i < tempData.length; i++) {
                if(tempData[i] < 10.0)
                {
                    darkBlueThresholdTemp++;
                }
                else if(tempData[i] >= 10.0 && tempData[i] < 17.0)
                {
                    lightBlueThresholdTemp++;
                }
                else if(tempData[i] >= 17.0 && tempData[i] <= 21.0)
                {
                    greenThresholdTemp++;
                }
                else if(tempData[i] > 21.0 && tempData[i] < 25.0){
                    yellowThresholdTemp++;
                }
                else if(tempData[i] >= 25.0 && tempData[i] < 35.0){
                    orangeThresholdTemp++;
                }
                else if(tempData[i] >= 35.0 ){
                    redThresholdTemp++;
                }
            }

            // Donn√©es pour les graphiques
            let redThresholdHum = 0;
            let yellowThresholdHum = 0;
            let greenThresholdHum = 0;

            for (let i = 0; i < humData.length; i++) {
                if(humData[i] >= 70.0 && tempData[i] >= 25)
                {
                    redThresholdHum++;
                }
                else if(humData[i] >= 70.0 && (tempData[i] >= 20 && tempData[i] <25))
                {
                    yellowThresholdCo2++;
                }
                else{
                    greenThresholdHum++;
                }
            }



            const textElementCo2 = document.getElementById('analyse-text-co2');
            const textElementHum = document.getElementById('analyse-text-hum');
            const textElementTemp = document.getElementById('analyse-text-temp');

            const ThresholdCo2Max = Math.max(greenThresholdCo2, yellowThresholdCo2, redThresholdCo2);

            switch (ThresholdCo2Max) {
                case greenThresholdCo2:
                    textElementCo2.textContent = "Le niveau de CO2 est dans le seuil vert (faible). üå± La qualit√© de l'air est bonne, et l'a√©ration est suffisante. Continuez √† maintenir une bonne ventilation.";
                    break;
                case yellowThresholdCo2:
                    textElementCo2.textContent = "Le niveau de CO2 est dans le seuil jaune (mod√©r√©). ‚ö†Ô∏è Cela indique que la qualit√© de l'air commence √† se d√©grader. \n\n**Raisons potentielles** : \n- La salle est occup√©e depuis un moment. \n- La ventilation est insuffisante ou limit√©e. \n\n**Solutions** : \n- A√©rez la pi√®ce en ouvrant les fen√™tres si possible. \n- Faites une pause pour permettre un renouvellement d'air. \n- V√©rifiez si le syst√®me de ventilation fonctionne correctement.";
                    break;
                case redThresholdCo2:
                    textElementCo2.textContent = "Le niveau de CO2 est dans le seuil rouge (√©lev√©). üö® La qualit√© de l'air est mauvaise et peut affecter le confort et la concentration des occupants. \n\n**Raisons potentielles** : \n- La salle est sur-occup√©e. \n- Aucune ventilation efficace n'est pr√©sente. \n- Les fen√™tres sont ferm√©es depuis trop longtemps. \n\n**Solutions** : \n- A√©rez imm√©diatement en ouvrant toutes les fen√™tres disponibles. \n- Si possible, r√©duisez le nombre de personnes dans la pi√®ce. \n- V√©rifiez et entretenez les √©quipements de ventilation ou utilisez un purificateur d'air.";
                    break;
                default:
                    textElementCo2.textContent = "Impossible de d√©terminer le seuil de CO2. Veuillez v√©rifier les donn√©es.";
            }

            const ThresholdTempMax = Math.max(
                darkBlueThresholdTemp,
                lightBlueThresholdTemp,
                greenThresholdTemp,
                yellowThresholdTemp,
                orangeThresholdTemp,
                redThresholdTemp
            );

            switch (ThresholdTempMax) {
                case darkBlueThresholdTemp:
                    textElementTemp.textContent = "La temp√©rature est tr√®s basse (seuil bleu fonc√©). ‚ùÑÔ∏è Il fait anormalement froid dans la pi√®ce, ce qui peut causer de l'inconfort ou une baisse de concentration. \n\n**Raisons potentielles** : \n- Chauffage d√©fectueux ou inexistant. \n- Mauvaise isolation thermique. \n\n**Solutions** : \n- V√©rifiez si le chauffage fonctionne correctement. \n- Utilisez des solutions temporaires comme des radiateurs d'appoint. \n- Am√©liorez l'isolation si n√©cessaire.";
                    break;
                case lightBlueThresholdTemp:
                    textElementTemp.textContent = "La temp√©rature est basse (seuil bleu clair). üå¨Ô∏è La pi√®ce est fra√Æche, mais pas critique. Cela pourrait devenir inconfortable sur le long terme. \n\n**Raisons potentielles** : \n- Chauffage insuffisant. \n- Courants d'air ou ventilation excessive. \n\n**Solutions** : \n- Augmentez l√©g√®rement la temp√©rature du chauffage. \n- V√©rifiez l'√©tanch√©it√© des fen√™tres et des portes.";
                    break;
                case greenThresholdTemp:
                    textElementTemp.textContent = "La temp√©rature est dans un seuil id√©al (seuil vert). üå°Ô∏è Les conditions thermiques sont optimales pour le confort et la concentration. Aucune action n'est n√©cessaire.";
                    break;
                case yellowThresholdTemp:
                    textElementTemp.textContent = "La temp√©rature est mod√©r√©e (seuil jaune). ‚ö†Ô∏è Elle commence √† √™tre l√©g√®rement √©lev√©e, ce qui pourrait causer un certain inconfort, surtout sur le long terme. \n\n**Raisons potentielles** : \n- Chauffage trop √©lev√©. \n- A√©ration insuffisante. \n\n**Solutions** : \n- Baissez l√©g√®rement la temp√©rature du chauffage. \n- A√©rez la pi√®ce pour √©quilibrer la temp√©rature.";
                    break;
                case orangeThresholdTemp:
                    textElementTemp.textContent = "La temp√©rature est √©lev√©e (seuil orange). üü† La pi√®ce est chaude, ce qui peut provoquer de l'inconfort et une baisse de productivit√©. \n\n**Raisons potentielles** : \n- Surchauffage d√ª √† un radiateur mal r√©gl√©. \n- Manque de ventilation ou pi√®ce expos√©e directement au soleil. \n\n**Solutions** : \n- R√©duisez le chauffage ou √©teignez-le temporairement. \n- A√©rez pour faire circuler l'air plus frais. \n- Utilisez des rideaux ou stores pour limiter l'exposition au soleil.";
                    break;
                case redThresholdTemp:
                    textElementTemp.textContent = "La temp√©rature est critique (seuil rouge). üö® Il fait trop chaud dans la pi√®ce, ce qui peut entra√Æner des risques pour la sant√© (comme des malaises). \n\n**Raisons potentielles** : \n- Absence de ventilation. \n- Canicule ou chauffage excessif non contr√¥l√©. \n\n**Solutions** : \n- A√©rez imm√©diatement pour faire entrer de l'air frais. \n- R√©duisez ou √©teignez les sources de chaleur. \n- Si possible, utilisez un ventilateur ou une climatisation.";
                    break;
                default:
                    textElementTemp.textContent = "Impossible de d√©terminer le seuil de temp√©rature. Veuillez v√©rifier les donn√©es.";
            }

            const ThresholdHumMax = Math.max(redThresholdHum, yellowThresholdHum, greenThresholdHum);

            switch (ThresholdHumMax) {
                case greenThresholdHum:
                    textElementHum.textContent = "Le niveau d'humidit√© est id√©al (seuil vert). üíß L'air est confortable et √©quilibr√©. Aucune action n'est n√©cessaire. Maintenez ces conditions pour un environnement sain.";
                    break;
                case yellowThresholdHum:
                    textElementHum.textContent = "Le niveau d'humidit√© est mod√©r√© (seuil jaune). ‚ö†Ô∏è L'air est l√©g√®rement trop sec ou trop humide, ce qui peut causer un l√©ger inconfort √† long terme. \n\n**Raisons potentielles** : \n- Manque de ventilation ou chauffage excessif (si l'air est sec). \n- Absence de d√©shumidification (si l'air est humide). \n\n**Solutions** : \n- Si l'air est sec : utilisez un humidificateur ou placez des r√©cipients d'eau pr√®s des radiateurs. \n- Si l'air est trop humide : a√©rez r√©guli√®rement ou utilisez un d√©shumidificateur.";
                    break;
                case redThresholdHum:
                    textElementHum.textContent = "Le niveau d'humidit√© est critique (seuil rouge). üö® Un exc√®s ou un manque important d'humidit√© peut nuire √† la sant√© et au confort. \n\n**Raisons potentielles** : \n- Humidit√© trop √©lev√©e : condensation, infiltration d'eau ou mauvaise ventilation. \n- Humidit√© trop basse : chauffage excessif ou air trop sec en hiver. \n\n**Solutions** : \n- Si l'air est trop humide : utilisez un d√©shumidificateur, r√©parez les √©ventuelles infiltrations et ventilez fr√©quemment. \n- Si l'air est trop sec : installez un humidificateur ou utilisez des solutions naturelles comme des plantes ou des r√©cipients d'eau.";
                    break;
                default:
                    textElementHum.textContent = "Impossible de d√©terminer le seuil d'humidit√©. Veuillez v√©rifier les donn√©es.";
            }

            // Cr√©er le graphique CO2
            const co2ChartCtx = document.getElementById('co2Chart').getContext('2d');

            const co2Chart = new Chart(co2ChartCtx, {
                type: 'pie',  // ou 'bar'
                data: {
                    labels: ['Taux de CO2 entre 400 et 1000 ppm', 'Taux de CO2 entre 1000 et 1400 ppm', 'Taux de CO2 au dessus de 1400 ppm'],
                    datasets: [{
                        data: [greenThresholdCo2, yellowThresholdCo2, redThresholdCo2],
                        backgroundColor: [
                            'rgb(41,112,6)',  // vert
                            'rgb(184,177,2)',  // jaune
                            'rgb(255,0,55)',   // rouge
                        ],
                        hoverOffset: 1
                    }]
                },
                options: {
                    responsive: true, // Le graphique s'adapte √† la taille de l'√©cran
                    plugins: {
                        legend: {
                            position: 'top', // Position de la l√©gende (top, bottom, left, right)
                        },
                        tooltip: {
                            enabled: false, // Active les infobulles
                        },
                    }
                }
            });

            // Cr√©er les graphiques
            const tempChartCtx = document.getElementById('tempChart').getContext('2d');
            const humChartCtx = document.getElementById('humChart').getContext('2d');

            const tempChart = new Chart(tempChartCtx, {
                type: 'pie',  // ou 'bar'
                data: {
                    labels: ['Temp√©rature inf√©rieure √† 10¬∞C', 'Temp√©rature entre 10 et 17¬∞C', 'Temp√©rature entre 17 et 21¬∞C', 'Temp√©rature entre 21 et 25¬∞C','Temp√©rature entre 25 et 35¬∞C', 'Temp√©rature sup√©rieure √† 35¬∞C'],
                    datasets: [{
                        data: [darkBlueThresholdTemp, lightBlueThresholdTemp, greenThresholdTemp, yellowThresholdTemp, orangeThresholdTemp, redThresholdTemp],
                        backgroundColor: [
                            'rgb(6,20,112)',  // vert
                            'rgb(8,138,209)',  // jaune
                            'rgb(41,112,6)',
                            'rgb(184,177,2)',  // jaune
                            'rgb(209,92,8)',  // jaune
                            'rgb(255,0,55)',   // rouge
                        ],
                        hoverOffset: 1
                    }]
                },
                options: {
                    responsive: true, // Le graphique s'adapte √† la taille de l'√©cran
                    plugins: {
                        legend: {
                            position: 'top', // Position de la l√©gende (top, bottom, left, right)
                        },
                        tooltip: {
                            enabled: false, // Active les infobulles
                        },
                    }
                }
            });

            const humChart = new Chart(humChartCtx, {
                type: 'pie',  // ou 'bar'
                data: {
                    labels: ['Gros risques de moisissure', 'Risques de moisissure', 'Tr√®s peu de risques de moisissure'],
                    datasets: [{
                        data: [redThresholdHum, yellowThresholdHum, greenThresholdHum],
                        backgroundColor: [
                            'rgb(255,0,55)',
                            'rgb(184,177,2)',
                            'rgb(41,112,6)',
                        ],
                    }]
                },
                options: {
                    responsive: true, // Le graphique s'adapte √† la taille de l'√©cran
                    plugins: {
                        legend: {
                            position: 'top', // Position de la l√©gende (top, bottom, left, right)
                        },
                        tooltip: {
                            enabled: false, // Active les infobulles
                        },
                    }
                }
            });

        </script>

    </div>
    {% endblock %}